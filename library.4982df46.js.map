{"mappings":"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","sources":["src/js/modal-library.js"],"sourcesContent":["import axios from 'axios';\nimport { createWatchedList, libraryMarkup } from './library-localStorage';\nimport {\n  refs,\n  createWatchedList,\n  createQueueList,\n} from './library-localStorage';\nexport const BASE_URL = 'https://api.themoviedb.org/3';\nexport const USER_KEY = '9e4f0ad78cbe1148a9d4c0c8389afc83';\nexport const prePoster = 'https://image.tmdb.org/t/p/original/';\nconst libraryEl = document.querySelector('.library-list');\nconst backDropEl = document.querySelector('.backdrop');\nconst modalContentEl = document.querySelector('.modal');\nlet markup = '';\nlibraryEl.addEventListener('click', onOpenModalLibrary);\n\nfunction getMovieID(event) {\n  event.preventDefault();\n  if (event.currentTarget === event.target) {\n    return;\n  }\n  const list = event.target.closest('li');\n  const listId = list.dataset.id;\n  return listId;\n}\n\nasync function fetchMovie(movie_id) {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}/movie/${movie_id}?api_key=${USER_KEY}&language=en-US`\n    );\n    return data;\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nasync function onButtonWatched(event) {\n  const watchedBtn = document.querySelector('.js-watchedBtn');\n  const filmId = event.target.dataset.id;\n  const watchedStatus = JSON.parse(localStorage.getItem('addToWatched')).find(\n    film => film.id === Number(filmId)\n  );\n  console.log('watched status', watchedStatus);\n  if (watchedStatus) {\n    watchedBtn.textContent = 'ADD TO WATCHED';\n    const watchedStorage = JSON.parse(\n      localStorage.getItem('addToWatched')\n    ).filter(film => film.id !== Number(filmId));\n    localStorage.setItem('addToWatched', JSON.stringify(watchedStorage));\n  } else {\n    watchedBtn.textContent = 'REMOVE FROM WATCHED';\n    const watchedStorage = JSON.parse(localStorage.getItem('addToWatched'));\n\n    const searchedFilmInfo = await fetchMovie(filmId);\n    const poster = searchedFilmInfo.poster_path;\n    const title = searchedFilmInfo.original_title\n      ? searchedFilmInfo.original_title\n      : searchedFilmInfo.title;\n    const genreList = searchedFilmInfo.genres\n      .map(genre => genre.name)\n      .join(', ');\n\n    const releaseDate = searchedFilmInfo.release_date.slice(0, 4);\n    const id = searchedFilmInfo.id;\n    const watchedLibrary = { poster, title, genreList, releaseDate, id };\n    watchedStorage.push(watchedLibrary);\n\n    localStorage.setItem('addToWatched', JSON.stringify(watchedStorage));\n  }\n  refs.watchedBtn.classList.add('active');\n  refs.queueBtn.classList.remove('active');\n  location.reload();\n}\n\nasync function onButtonQueue(event) {\n  const queueBtn = document.querySelector('.js-queueBtn');\n  const filmId = event.target.dataset.id;\n  const queueStatus = JSON.parse(localStorage.getItem('addToQueue')).find(\n    film => film.id === Number(filmId)\n  );\n\n  if (queueStatus) {\n    queueBtn.textContent = 'ADD TO QUEUE';\n    const queueStorage = JSON.parse(localStorage.getItem('addToQueue')).filter(\n      film => film.id !== Number(filmId)\n    );\n    localStorage.setItem('addToQueue', JSON.stringify(queueStorage));\n  } else {\n    queueBtn.textContent = 'REMOVE FROM QUEUE';\n    const queueStorage = JSON.parse(localStorage.getItem('addToQueue'));\n\n    const searchedFilmInfo = await fetchMovie(filmId);\n    const poster = searchedFilmInfo.poster_path;\n    const title = searchedFilmInfo.original_title\n      ? searchedFilmInfo.original_title\n      : searchedFilmInfo.title;\n    const genreList = searchedFilmInfo.genres\n      .map(genre => genre.name)\n      .join(', ');\n\n    const releaseDate = searchedFilmInfo.release_date.slice(0, 4);\n    const id = searchedFilmInfo.id;\n    const queueLibrary = { poster, title, genreList, releaseDate, id };\n    queueStorage.push(queueLibrary);\n\n    localStorage.setItem('addToQueue', JSON.stringify(queueStorage));\n  }\n  refs.watchedBtn.classList.add('active');\n  refs.queueBtn.classList.remove('active');\n  location.reload();\n}\n\nasync function onOpenModalLibrary(event) {\n  const filmId = getMovieID(event);\n  const filmData = await fetchMovie(filmId);\n  const watchedArray = localStorage.getItem('addToWatched');\n  const queueArray = localStorage.getItem('addToQueue');\n\n  const watchedStatus = JSON.parse(watchedArray).find(\n    film => film.id === Number(filmId)\n  );\n  const queueStatus = JSON.parse(queueArray).find(\n    film => film.id === Number(filmId)\n  );\n  const watchedButtonContent = watchedStatus\n    ? 'REMOVE FROM WATCHED'\n    : 'ADD TO WATCHED';\n\n  const queueButtonContent = queueStatus ? 'REMOVE FROM QUEUE' : 'ADD TO QUEUE';\n\n  movieModalLibraryRender(filmData, watchedButtonContent, queueButtonContent);\n  const closeBtnEl = document.querySelector('.modal-close');\n  closeBtnEl.addEventListener('click', onModalClose);\n  document.addEventListener('keydown', e => {\n    if (e.keyCode === 27) {\n      onModalClose();\n    }\n  });\n  backDropEl.addEventListener('click', e => {\n    if (e.target === e.currentTarget) {\n      onModalClose();\n    }\n  });\n  const watchedBtn = document.querySelector('.js-watchedBtn');\n  const queueBtn = document.querySelector('.js-queueBtn');\n  watchedBtn.addEventListener('click', onButtonWatched);\n  queueBtn.addEventListener('click', onButtonQueue);\n}\n\nfunction onModalClose() {\n  backDropEl.classList.add('visually-hidden');\n  //movieToFind = {};\n  modalContentEl.innerHTML = '';\n  markup = '';\n}\n\nfunction movieModalLibraryRender(\n  filmData,\n  watchedButtonContent,\n  queueButtonContent\n) {\n  modalContentEl.innerHTML = '';\n  backDropEl.classList.remove('visually-hidden');\n\n  const {\n    poster_path,\n    original_title,\n    name,\n    vote_average,\n    vote_count,\n    popularity,\n    genres,\n    release_date = '',\n    first_air_date = '',\n    overview,\n    id,\n  } = filmData;\n\n  const movieName = original_title ? original_title : name;\n  const date = release_date\n    ? release_date.slice(0, 4)\n    : first_air_date.slice(0, 4);\n  const genreList = genres.map(genre => genre.name).join(', ');\n\n  const icon = `<svg\n      width=\"30\"\n      height=\"30\"\n      viewBox=\"0 0 30 30\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path d=\"M8 8L22 22\" stroke=\"black\" stroke-width=\"2\" />\n      <path d=\"M8 22L22 8\" stroke=\"black\" stroke-width=\"2\" />\n    </svg>`;\n\n  markup = `\n   <button type=\"button\" class=\"modal-close\" data-modal-close>\n    ${icon}\n  </button>\n  <div class=\"modal-poster\"><img\n      class=\"img-film\"\n      src=\"${prePoster}${poster_path}\"\n      alt=\"\"\n    />\n  </div>\n  <div class=\"modal-description\">\n    <h2 class=\"modal-title\">${movieName}</h2>\n    <div class=\"data-wrapper\">\n      <div class=\"data-keys\">\n        <ul class=\"keys-list\">\n          <li class=\"keys-item\">Vote / Votes</li>\n          <li class=\"keys-item\">Popularity</li>\n          <li class=\"keys-item\">Original Title</li>\n          <li class=\"keys-item\">Genre</li>\n        </ul>\n      </div>\n      <div class=\"data-values\">\n        <ul class=\"values-list\">\n          <li class=\"value-item\">\n            <span class=\"rating\">${vote_average}</span>/<span class=\"votes\">${vote_count}</span>\n          </li>\n          <li class=\"value-item popularity\">${popularity}</li>\n          <li class=\"value-item movie-title\">${movieName}</li>\n          <li class=\"value-item movie-genres\">${genreList}</li>\n        </ul>\n      </div>\n    </div>\n    <h2 class=\"about-film\">ABOUT</h2>\n    <p class=\"description-film-info\">${overview} \n    </p>\n    <div class=\"btn-block\">\n      <button type=\"button\" class=\"modal-button js-watchedBtn\" data-id='${id}'>${watchedButtonContent}</button>\n      <button type=\"button\" class=\"modal-button js-queueBtn\" data-id='${id}'>${queueButtonContent}</button>\n    </div>\n  </div>`;\n\n  modalContentEl.insertAdjacentHTML('afterbegin', markup);\n}\n"],"names":["$bpxeT","parcelRequire","$5274909fd9dfb2b1$export$ca6dda5263526f75","$5274909fd9dfb2b1$export$c8269609c9765a21","$5274909fd9dfb2b1$var$libraryEl","document","querySelector","$5274909fd9dfb2b1$var$backDropEl","$5274909fd9dfb2b1$var$modalContentEl","$5274909fd9dfb2b1$var$markup","$5274909fd9dfb2b1$var$getMovieID","event","preventDefault","currentTarget","target","closest","dataset","id","$5274909fd9dfb2b1$var$fetchMovie","movie_id","$5274909fd9dfb2b1$var$_fetchMovie","apply","this","arguments","$parcel$interopDefault","$2TvXO","mark","_callee","data","$dIxxU","default","get","concat","_ctx","sent","console","log","t0","message","$5274909fd9dfb2b1$var$onButtonWatched","$5274909fd9dfb2b1$var$_onButtonWatched","watchedBtn","filmId","watchedStatus","watchedStorage","watchedStorage1","searchedFilmInfo","poster","title","genreList","releaseDate","watchedLibrary","JSON","parse","localStorage","getItem","find","film","Number","textContent","filter","setItem","stringify","poster_path","original_title","genres","map","genre","name","join","release_date","slice","push","$9hinH","refs","classList","add","queueBtn","remove","location","reload","$5274909fd9dfb2b1$var$onButtonQueue","$5274909fd9dfb2b1$var$_onButtonQueue","queueStorage","queueStorage1","queueLibrary","$5274909fd9dfb2b1$var$_onOpenModalLibrary","filmData","watchedArray","queueArray","queueStatus","$5274909fd9dfb2b1$var$movieModalLibraryRender","addEventListener","$5274909fd9dfb2b1$var$onModalClose","e","keyCode","innerHTML","watchedButtonContent","queueButtonContent","vote_average","vote_count","popularity","_release_date","_first_air_date","first_air_date","overview","movieName","insertAdjacentHTML"],"version":3,"file":"library.4982df46.js.map"}